// RUN: rel_opt.py %s | filecheck %s

module() {
  %0 : !rel_impl.bag<[!rel_impl.schema_element<"a", !rel_impl.string<1 : !i1>>, !rel_impl.schema_element<"b", !rel_impl.int64>, !rel_impl.schema_element<"c", !rel_impl.int64>]> = rel_impl.full_table_scan() ["table_name" = "t"]
  %1 : !rel_impl.bag<[!rel_impl.schema_element<"a", !rel_impl.string<1 : !i1>>, !rel_impl.schema_element<"b", !rel_impl.int64>]> = rel_impl.project(%0 : !rel_impl.bag<[!rel_impl.schema_element<"a", !rel_impl.string<1 : !i1>>, !rel_impl.schema_element<"b", !rel_impl.int64>, !rel_impl.schema_element<"c", !rel_impl.int64>]>) {
    ^0(%2 : !rel_impl.tuple<[!rel_impl.schema_element<"a", !rel_impl.string<1 : !i1>>, !rel_impl.schema_element<"b", !rel_impl.int64>, !rel_impl.schema_element<"c", !rel_impl.int64>]>):
    %3 : !rel_impl.string<1 : !i1> = rel_impl.index_by_name( %2 : !rel_impl.tuple<[!rel_impl.schema_element<"a", !rel_impl.string<1 : !i1>>, !rel_impl.schema_element<"b", !rel_impl.int64>, !rel_impl.schema_element<"c", !rel_impl.int64>]>) ["col_name" = "a"]
    %4 : !rel_impl.int64 = rel_impl.index_by_name(%2 : !rel_impl.tuple<[!rel_impl.schema_element<"a", !rel_impl.string<1 : !i1>>, !rel_impl.schema_element<"b", !rel_impl.int64>, !rel_impl.schema_element<"c", !rel_impl.int64>]>) ["col_name" = "b"]
    %5 : !rel_impl.tuple<[!rel_impl.schema_element<"a", !rel_impl.string<1 : !i1>>, !rel_impl.schema_element<"b", !rel_impl.int64>]> = rel_impl.create_tuple(%3 : !rel_impl.string<1 : !i1>, %4 : !rel_impl.int64)
    rel_impl.yield(%5 : !rel_impl.tuple<[!rel_impl.schema_element<"a", !rel_impl.string<1 : !i1>>, !rel_impl.schema_element<"b", !rel_impl.int64>]>)
 }
}

//      CHECK:  %0 : !rel_impl.bag<[!rel_impl.schema_element<"a", !rel_impl.string<1 : !i1>>, !rel_impl.schema_element<"b", !rel_impl.int64>, !rel_impl.schema_element<"c", !rel_impl.int64>]> = rel_impl.full_table_scan() ["table_name" = "t"]
// CHECK-NEXT:  %1 : !rel_impl.bag<[!rel_impl.schema_element<"a", !rel_impl.string<1 : !i1>>, !rel_impl.schema_element<"b", !rel_impl.int64>]> = rel_impl.project(%0 : !rel_impl.bag<[!rel_impl.schema_element<"a", !rel_impl.string<1 : !i1>>, !rel_impl.schema_element<"b", !rel_impl.int64>, !rel_impl.schema_element<"c", !rel_impl.int64>]>) {
// CHECK-NEXT:    ^0(%2 : !rel_impl.tuple<[!rel_impl.schema_element<"a", !rel_impl.string<1 : !i1>>, !rel_impl.schema_element<"b", !rel_impl.int64>, !rel_impl.schema_element<"c", !rel_impl.int64>]>):
// CHECK-NEXT:    %3 : !rel_impl.string<1 : !i1> = rel_impl.index_by_name(%2 : !rel_impl.tuple<[!rel_impl.schema_element<"a", !rel_impl.string<1 : !i1>>, !rel_impl.schema_element<"b", !rel_impl.int64>, !rel_impl.schema_element<"c", !rel_impl.int64>]>) ["col_name" = "a"]
// CHECK-NEXT:    %4 : !rel_impl.int64 = rel_impl.index_by_name(%2 : !rel_impl.tuple<[!rel_impl.schema_element<"a", !rel_impl.string<1 : !i1>>, !rel_impl.schema_element<"b", !rel_impl.int64>, !rel_impl.schema_element<"c", !rel_impl.int64>]>) ["col_name" = "b"]
// CHECK-NEXT:    %5 : !rel_impl.tuple<[!rel_impl.schema_element<"a", !rel_impl.string<1 : !i1>>, !rel_impl.schema_element<"b", !rel_impl.int64>]> = rel_impl.create_tuple(%3 : !rel_impl.string<1 : !i1>, %4 : !rel_impl.int64)
// CHECK-NEXT:    rel_impl.yield(%5 : !rel_impl.tuple<[!rel_impl.schema_element<"a", !rel_impl.string<1 : !i1>>, !rel_impl.schema_element<"b", !rel_impl.int64>]>)
// CHECK-NEXT: }
