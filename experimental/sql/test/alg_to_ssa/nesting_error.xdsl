// RUN: rel_opt.py -p alg-to-ssa %s | filecheck %s

module() {
    rel_alg.aggregate() ["col_names" = ["im"], "functions" = ["sum"], "res_names" = ["idsum"], "by" = []] {
        rel_alg.project() ["names" = ["im"]] {
            rel_alg.table() ["table_name" = "t"] {
                rel_alg.schema_element() ["elt_name" = "id", "elt_type" = !rel_alg.int32]
                rel_alg.schema_element() ["elt_name" = "age", "elt_type" = !rel_alg.int32]
            }
        } {
            rel_alg.column() ["col_name" = "id"]
        }
    }
}

//      CHECK:  %0 : !rel_ssa.bag<[!rel_ssa.schema_element<"id", !rel_ssa.int32>, !rel_ssa.schema_element<"age", !rel_ssa.int32>]> = rel_ssa.table() ["table_name" = "t"]
// CHECK-NEXT:  %1 : !rel_ssa.bag<[!rel_ssa.schema_element<"im", !rel_ssa.int32>]> = rel_ssa.project(%0 : !rel_ssa.bag<[!rel_ssa.schema_element<"id", !rel_ssa.int32>, !rel_ssa.schema_element<"age", !rel_ssa.int32>]>) {
// CHECK-NEXT:    %2 : !rel_ssa.int32 = rel_ssa.column() ["col_name" = "id"]
// CHECK-NEXT:    rel_ssa.yield_tuple(%2 : !rel_ssa.int32)
// CHECK-NEXT:  }
// CHECK-NEXT:  %3 : !rel_ssa.bag<[!rel_ssa.schema_element<"idsum", !rel_ssa.int32>]> = rel_ssa.aggregate(%1 : !rel_ssa.bag<[!rel_ssa.schema_element<"im", !rel_ssa.int32>]>) ["col_names" = ["im"], "functions" = ["sum"], "by" = []]
